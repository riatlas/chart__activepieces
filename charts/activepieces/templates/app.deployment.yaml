apiVersion: apps/v1
kind: Deployment
metadata:
  name: '{{ .Release.Name }}-app'
  labels:
    katenary.io/component: app
    katenary.io/project: '{{ .Chart.Name }}'
    katenary.io/release: '{{ .Release.Name }}'
  annotations:
    katenary.io/docker-compose-sha1: 403bf1804b7c96915dbd282860506a6255f9b5c5
    katenary.io/version: 2.0.0-beta2
spec:
  replicas: 1
  selector:
    matchLabels:
      katenary.io/component: app
      katenary.io/release: '{{ .Release.Name }}'
  template:
    metadata:
      labels:
        katenary.io/component: app
        katenary.io/release: '{{ .Release.Name }}'
    spec:
      initContainers:
        - name: check-postgres
          image: busybox
          command:
            - sh
            - -c
            - |-
              OK=0
              echo "Checking postgres port"
              while [ $OK != 1 ]; do
                  echo -n "."
                  nc -z {{ .Release.Name }}-postgres 5432 2>&1 >/dev/null && OK=1 || sleep 1
              done
              echo
              echo "Done"
        - name: check-redis
          image: busybox
          command:
            - sh
            - -c
            - |-
              OK=0
              echo "Checking redis port"
              while [ $OK != 1 ]; do
                  echo -n "."
                  nc -z {{ .Release.Name }}-redis 6379 2>&1 >/dev/null && OK=1 || sleep 1
              done
              echo
              echo "Done"
      containers:
        - name: app
          image: '{{ .Values.app.repository.image }}{{ if ne .Values.app.repository.tag "" }}:{{ .Values.app.repository.tag | default .Chart.AppVersion }}{{ end }}'
                   
          envFrom:
          - configMapRef:
              name: {{ $.Release.Name }}-app-envs
          - secretRef: 
              name: {{ $.Release.Name }}-app-secrets
          


            

