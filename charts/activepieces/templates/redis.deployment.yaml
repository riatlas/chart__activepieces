apiVersion: apps/v1
kind: Deployment
metadata:
  name: '{{ .Release.Name }}-redis'
  labels:
    katenary.io/component: redis
    katenary.io/project: '{{ .Chart.Name }}'
    katenary.io/release: '{{ .Release.Name }}'
  annotations:
    katenary.io/docker-compose-sha1: 403bf1804b7c96915dbd282860506a6255f9b5c5
    katenary.io/version: 2.0.0-beta2
spec:
  replicas: 1
  selector:
    matchLabels:
      katenary.io/component: redis
      katenary.io/release: '{{ .Release.Name }}'
  template:
    metadata:
      labels:
        katenary.io/component: redis
        katenary.io/release: '{{ .Release.Name }}'
    spec:
      containers:
        - name: redis
          image: '{{ .Values.redis.repository.image }}{{ if ne .Values.redis.repository.tag "" }}:{{ .Values.redis.repository.tag }}{{ end }}'
          ports:
            - name: redis
              containerPort: 6379
          volumeMounts:
            - mountPath: /data
              name: redis-data
      volumes:
        - name: redis-data
          {{- if  .Values.redis.persistence.enabled }}
          persistentVolumeClaim:
            claimName: '{{ .Release.Name }}-redis-data'
          {{ else }}
          emptyDir: {}
          {{- end }}

